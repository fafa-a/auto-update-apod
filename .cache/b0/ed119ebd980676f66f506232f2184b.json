{"id":"Vxaz","dependencies":[{"name":"D:\\WorkSpace\\Side project\\auto-update-apod\\package.json","includedInParent":true,"mtime":1622575343702},{"name":"D:\\WorkSpace\\Side project\\auto-update-apod\\node_modules\\cloudinary\\package.json","includedInParent":true,"mtime":1622387572969},{"name":"./base64Encode","loc":{"line":1,"column":33},"parent":"D:\\WorkSpace\\Side project\\auto-update-apod\\node_modules\\cloudinary\\lib\\utils\\encoding\\base64EncodeURL.js","resolved":"D:\\WorkSpace\\Side project\\auto-update-apod\\node_modules\\cloudinary\\lib\\utils\\encoding\\base64Encode.js"}],"generated":{"js":"const{base64Encode:e}=require(\"./base64Encode\");function c(c){try{c=decodeURI(c)}catch(o){}return c=encodeURI(c),e(c).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=+$/,\"\")}module.exports.base64EncodeURL=c;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":1,"column":6},"generated":{"line":1,"column":6}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64Encode","original":{"line":1,"column":8},"generated":{"line":1,"column":19}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"require","original":{"line":1,"column":25},"generated":{"line":1,"column":22}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":1,"column":33},"generated":{"line":1,"column":30}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":3,"column":0},"generated":{"line":1,"column":48}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64EncodeURL","original":{"line":3,"column":9},"generated":{"line":1,"column":57}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":3,"column":25},"generated":{"line":1,"column":59}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":4,"column":6},"generated":{"line":1,"column":62}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":5,"column":4},"generated":{"line":1,"column":66}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"decodeURI","original":{"line":5,"column":16},"generated":{"line":1,"column":68}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":5,"column":26},"generated":{"line":1,"column":78}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":6,"column":4},"generated":{"line":1,"column":81}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"error","original":{"line":6,"column":11},"generated":{"line":1,"column":87}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64Encode","original":{"line":10,"column":9},"generated":{"line":1,"column":91}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":9,"column":2},"generated":{"line":1,"column":98}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"encodeURI","original":{"line":9,"column":14},"generated":{"line":1,"column":100}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":9,"column":24},"generated":{"line":1,"column":110}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64Encode","original":{"line":10,"column":9},"generated":{"line":1,"column":113}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"sourceUrl","original":{"line":10,"column":22},"generated":{"line":1,"column":115}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"replace","original":{"line":11,"column":5},"generated":{"line":1,"column":118}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":11,"column":13},"generated":{"line":1,"column":126}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":11,"column":20},"generated":{"line":1,"column":132}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"replace","original":{"line":12,"column":5},"generated":{"line":1,"column":137}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":12,"column":13},"generated":{"line":1,"column":145}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":12,"column":20},"generated":{"line":1,"column":151}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"replace","original":{"line":13,"column":5},"generated":{"line":1,"column":156}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":13,"column":13},"generated":{"line":1,"column":164}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","original":{"line":13,"column":20},"generated":{"line":1,"column":170}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"module","original":{"line":17,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"exports","original":{"line":17,"column":7},"generated":{"line":1,"column":181}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64EncodeURL","original":{"line":17,"column":15},"generated":{"line":1,"column":189}},{"source":"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js","name":"base64EncodeURL","original":{"line":17,"column":33},"generated":{"line":1,"column":205}}],"sources":{"node_modules/cloudinary/lib/utils/encoding/base64EncodeURL.js":"const { base64Encode } = require('./base64Encode')\n\nfunction base64EncodeURL(sourceUrl) {\n  try {\n    sourceUrl = decodeURI(sourceUrl);\n  } catch (error) {\n    // ignore errors\n  }\n  sourceUrl = encodeURI(sourceUrl);\n  return base64Encode(sourceUrl)\n    .replace(/\\+/g, '-') // Convert '+' to '-'\n    .replace(/\\//g, '_') // Convert '/' to '_'\n    .replace(/=+$/, ''); // Remove ending '=';\n}\n\n\nmodule.exports.base64EncodeURL = base64EncodeURL;\n"},"lineCount":null}},"error":null,"hash":"70f535a3d7b49060d8817dce767c86c2","cacheData":{"env":{}}}